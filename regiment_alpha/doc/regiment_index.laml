
(load "schemedoc/laml.init")
(load "schemedoc/laml.scm")
(laml-style "xml-in-laml/schemedoc-index/schemedoc-index")

;(fake-startup-parameters (cadr (command-line-arguments)) (car (command-line-arguments)))
(fake-startup-parameters "index" "./")

(define (in-laml sf) (string-append (laml-dir-prefix (startup-directory))  sf))
(define (in-lib-man sf) (string-append (laml-dir-prefix (startup-directory)) "lib/man/" sf))

(define files (command-line-arguments))

(manual-index
 (manual-index-front-matters
    (manual-index-title "Regiment Compiler/Simulator Source Code.")
    ;'browser-type "two-steps"
    'browser-type "one-step"
    'left-frame-width "350px"
    'top-frame-height "350px"
    'initial-manual-frame "info"
    'scheme-report-version "r5rs"
    'scheme-report "include" ; none, include, merge
    'source-destination-delta "html/"
  )

  (apply manual-index-contributions
	 (map (lambda (file)
		(manual-index-contribution 
		 'informative-name file
		 'path (string-append "html/" file ".html")))
	   files)
#|
    (manual-index-contribution 
       ;'informative-name "Compiler Front-end"
     'informative-name "Compiler main"
       'path "html/compiler.ss.html")

    (manual-index-contribution 
       'informative-name "Command line front-end"
       'path "html/regiment.ss.html")

    (manual-index-contribution 
       'informative-name "generic/simulator_alpha.ss\nA second simulator"
       'path "html/generic/simulator_alpha.ss.html")

    (manual-index-contribution 
       'informative-name "SimAlpha Datatype definitions"
       'path "html/generic/simulator_alpha_datatypes.ss.html")

    (manual-index-contribution 
       'informative-name "SimAlpha Runtime Library"
       'path "html/generic/alpha_lib.ss.html")

    (manual-index-contribution 
       'informative-name "SimAlpha Simple Scheduler"
       'path "html/generic/alpha_lib_scheduler_simple.ss.html")

    (manual-index-contribution 
       'informative-name "generic/hash.ss"
       'path "html/generic/hash.ss.html")
|#
    )
  )
