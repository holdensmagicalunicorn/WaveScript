
;; The physical network:
network n1 n2 n3 
; node n1 cpu 40 ;; Alternate
node n1 cpu 55
node n2 cpu 56
node n3 cpu 57

; link n1 bw 400 lat 9  <-> n2  ;; Alternate
link n1 bw 210 lat 9  <-> n2
link n2 bw 240 lat 11 <-> n3

;;========================================

;; This query goes back and forth:

query Q_2 q4 q5 q6 q7 q8
op q4 cpu 25
op q5 cpu 10
op q6 cpu 10
op q7 cpu 10
op q8 cpu 25

pin q4 n1
pin q8 n1
pin q6 n3


;; q4 and q8 are sources, flowing towards q6 sink:
; edge q4 bw 1.6  -> q5
; edge q5 bw 1.7  -> q6
; edge q7 bw 1.8  -> q6
; edge q8 bw 1.9  -> q7

;; Answers: Same as below, direction doesn't matter.


;; These go in a lite from q4 -> q8
edge q4 bw 1.6  -> q5
edge q5 bw 1.7  -> q6
edge q6 bw 1.8  -> q7
edge q7 bw 1.9  -> q8

;; Answer for latency: doesn't matter.  Will be 40 regardless.

;; Answer for bandwidth: q5-n3, q7-n2.  We want to go out and back fast
;; because costs are rising... but we can't put q7-n1 because there
;; ain't enough compute.

;; Answer for bottleneck:


;; ========================================
;; Certain edges and operators (either intra- or inter-query) can
;; share 0-100% of their cpu/bandwidth requirments.

; edge_share q1 q2 q4 q5 100
; op_share q1 q4 50
