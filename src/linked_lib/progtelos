#!/bin/bash

## A simple script for programming several telos motes connected to one computer.

# Only handling tmote sky's for now:
MOTES=`motelist | grep tmote | awk '{ print $2 }'`

WSDATALEN=99

function doit() {
 bsl=$1
 id=$2
 mote=$3
 echo; echo Programming $mote with nodeID $id.
 echo ============================================================; echo

 export PFLAGS="-DTOSH_DATA_LENGTH=$WSDATALEN"
 if [ -f build/telosb/main.exe ];
 then echo "Reinstalling...";
      make -f Makefile.tos2 telosb $bsl,$mote reinstall,$id # || exit
 else echo "Building and installing for the first time.";
      make -f Makefile.tos2 telosb $bsl,$mote   install,$id # || exit
 fi
}

case "$1" in
  "" )
    echo "Usage: progtelos <num> or progtelos all"
    echo "  <num> will be interpreted as referring to /dev/ttyUSB<num>."
    echo "  'all' will program all motes indicated by 'motelist'."
    echo "  In any case, the nodeID is equal to <num>+1."
    exit 0
  ;;
  "all" )
    echo "Programming ALL nodes."; 
    idcntr=1
    for mote in $MOTES; do
      doit bsl $idcntr $mote
      idcntr=$(($idcntr + 1))
    done  
  ;;

  # RRN: This is specific to me, program our CSAIL motes:
  "net" )
    # Starting at two so we can do the base station separately:
    id=2;

    for num in 1 5 6 9 10 11 12; do 
#    for num in 1 2 4 5 6 7 8 9 10 11 12 14; do 
      id=$(($id+1));
      doit netbsl $id tmote-"$num".csail.mit.edu:10001
      id=$(($id+1));
      doit netbsl $id tmote-"$num".csail.mit.edu:10002
    done
  ;;

  "netone" )
    if [ "$2" = "" ];
    then NUM=1
    else NUM=$2
    fi 
    # Port should just be 1 or 2:
    if [ "$3" = "" ];
    then PORT=1
    else PORT=$3
    fi 
    ID=$((NUM+1))
    doit netbsl $ID tmote-"$NUM".csail.mit.edu:1000"$PORT"
    #doit netbsl 2 tmote-1.csail.mit.edu:10001
  ;;

  * )
    # [2008.10.06] If there's a second argument, treat that as the nodeid.
    if [ "$2" = "" ];
    then doit bsl $(($1+1)) /dev/ttyUSB$1
    else doit bsl $2 /dev/ttyUSB$1
    fi
    echo
    echo "Now run 'java PrintfClient' to listen to the output."
  ;;
esac

# Kyle's list of 9th floor motes:

# 2	G914	tmote-1		10001 
# 3	G914	tmote-1		10002 - good
# 4	G916	tmote-2		10001 
# 1	G916	tmote-2		10002
# 8	G918	tmote-3		10001
# 5	G918	tmote-3		10002
# 6	G920	tmote-4		10001 - good
# 7	G920	tmote-4		10002 - good
# 11	G938	tmote-5		10001 - good
# 12	G938	tmote-5		10002 - good
# 19	G936	tmote-6		10001 - good
# 20	G936	tmote-6		10002
# 21	G934	tmote-7		10001
# 22	G934	tmote-7		10002
# 9	G932	tmote-8		10001 - good
# 10	G932	tmote-8		10002 - good
# 17	G924	tmote-9		10001 - good
# 18	G924	tmote-9		10002 - good
# 15	G942	tmote-10	10001 - good
# 16	G942	tmote-10	10002 - good
# 13	G940	tmote-11	10001 - good
# 14	G940	tmote-11	10002
# 23	G922	tmote-12	10001 - good
# 24	G922	tmote-12	10002 - good

# 25	G918	tmote-14	10001 - good
# 25	G918	tmote-14	10002 - good

# That was circa last april, 2008
