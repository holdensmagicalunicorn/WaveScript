
 <IN_PROGRESS>:
================================================================================
Things I'm working on now --Ryan:


================================================================================



================================================================================

[2007.01.27]

 *) Build .boot file.
 *) Finish implementing equality
 *) Make printed representations consistent between WS and WSC. 
 X) Push generic arith system to the front end.
 X) add ws.opt and wsc.opt targets for when performance is critical.

[2006.11.29]
 X) For distribution compile a separate regiment.opt for simulations.
    (The default checkout should be opt-level 2, DEBUG on.)

[2006.11.08]
 *) Move more into the simworld structure.  In particular, world
    xbound/ybound.  Maybe connectivity model also.

[2006.11.05]
 *) Change inliner to allow "lib" functions that don't inline (of
    appropriate type). [Did a weird hack for this instead.]

[2006.11.01]
  Should include optional Intermediate? check for define-pass to
verify that a user function produces a valid intermediate record.
It's very easy to accidentally return an expression where you were
supposed to return an intermediate record.

[2006.10.17~]

 *) Completing static-elaboration for effectful constructs
 ~~) Inserting grammars between passes. [Significant progress]
 ~~) Moving to generic-traversal for early passes. [2006.10]
 *) Fixing let, letrec, lazy-letrec.
    *) Make "let" not desugar... (for consistency with typing rules)
    *) Make letrec strict throughout the compiler.
 *) Would like to get the LAML Schemedoc stuff working again.

 ~~) Add matrix WS operations
   *) Also add more FFT ops (maybe stream-lifted version too) 


[2006.09.03]
  X) Do not desugar one-armed if in the parser!!!

[2006.09.01]
 *) I have NEVER taken advantage of the "test-this" convention, I should do away with it.

[2006.08.29]

 *) How much work would it be to track source locations?
  [2006.12.03]
  So what I would like to do is add a general association list of "info" to each term.
  This is analogous to the to a parameterized "expr 'a" type in ML.
  THEN I can remove certain hackish things.


[2006.08.02]

 *) Encapsulate thread related things into a threads.ss
 *) Is there any way to get "languages" working in PLT?
 X) Finish porting modules to common module format.


[2006.05.02]

 *) Unit tests for deglobalize2


[2006.04.03]

  *) Add type checking to TMs.
  X) Add type checking between all passes of the compiler.
  X) Add more custom grammar checks.
  X) (Maybe fix the system for grammar check errors, it's fundamentally
     broken and a hack.)
  X) Rework type system.
  X) Add and use generic traverse for Regiment as well as TML.
  *) Lift out certain Regiment utilities from individual passes into common files.


================================================================================
FINISHED:

<Done> [2005.10.19] Make the chez version use records.  Better safety that way.
Can't remember why I didn't originally.
<Done> [2006.10] Reorganizing files into a deeper hierarchy. [2006.10.17]

 X) I am going to need to add a pass to annotate the type of rators.
    Will need this to make the elaborator work right.

 X) Bringing PLT version back online.
   *) Move chez/alpha_lib to generic

 X) Porting over to common module system.

 X) sigseg_foreach (but no efficient support yet)

 X) Inserting type-checking between passes.
   ~) De-primitive-izing tuple, tupref [2006.10]

 X) Updating type checker to handle partially annotated programs.

