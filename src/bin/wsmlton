#!/bin/bash

#TMP=/tmp/`whoami`/wavescript_parsed.tmp

source `dirname $0`/assert_regimentd



FLAGS=' -verbose 1 -link-opt -lfftw3f  '
CINCLUDES="$REGIMENTD/src/generic/passes/mlton_bkend/fftw.c"
OUTPUT=query.mlton.exe

# I'm having a lot of trouble getting enough quotes around 
# 'allowFFI true' for it to be treated as one token.
#MLTON='mlton -default-ann "\'allowFFI true\'"'
MLTON=mlton.hack

if [ "$1" == "-dbg" ]
then MLTON=mlton.dbg;
     shift;
fi 

if [ ! -f "$1" ];
then echo Usage: "wsmlton <file> <options ...>";
     echo 
     echo   File \"$1\" does not exist.
     exit 1;
fi

#if [ ! -d /tmp/`whoami` ];  then mkdir /tmp/`whoami`; fi

# FILENAME MUST BE FIRST ARG
INFILE=$1
D=`dirname "$INFILE"`
B=`basename "$INFILE"`
abspath="`cd \"$D\" 2>/dev/null && pwd || echo \"$D\"`/$B"
shift

# Clean up first:
rm -f "query.sml"
rm -f "$OUTPUT"

export REGIMENT_OR_WAVESCRIPT=WS
echo regiment wsml $abspath ${1+"$@"} ;
if regiment wsml $abspath ${1+"$@"} ;
then echo
else #rm -f $TMP; 
    echo Compilation aborted: \"regiment wscomp\" exited with error code.
    exit 1;
fi


# Pull the extra libraries off the first line of the query file.
############################################################
FIRST=`head -n1 query.sml`
echo FIRST LINE OF FILE: $FIRST
MATCH=`echo $FIRST | grep "WSLIBDEPS:"`
if [ "$MATCH" != "" ];
then 
   EXTRALIBS=`echo $FIRST | sed "s/.*WSLIBDEPS://"`
   echo Linking extra libraries requested by query file: $EXTRALIBS
   CINCLUDES="$CINCLUDES $EXTRALIBS"
fi
############################################################


################################################################################

#MLTON="mlton -const 'Exn.keepHistory true'"

#echo "$MLTON -const 'Exn.keepHistory true' -default-ann 'allowFFI true' -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES"
echo "$MLTON  -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES"

#-default-ann 'allowFFI true'

#GRR="'allowFFI true'"

start=`date +%s`
if 
# For debugging enable keepHistory to get Stack traces:
#$MLTON -const 'Exn.keepHistory true' -default-ann 'allowFFI true' -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES
$MLTON -output $OUTPUT $FLAGS $INCLUDES query.sml $CINCLUDES
then end=`date +%s`;
     echo "  Time spent in $SML compiler: "$[($end) - ($start)]" second(s)";
     echo "Executable output to $OUTPUT.";
else echo "$SML returned error!!"; exit -1
fi
