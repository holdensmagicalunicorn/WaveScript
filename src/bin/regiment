#! /bin/bash

source `dirname $0`/assert_regimentd

#scheme -h regimentc.1.heap $*
#chez -h regimentc.1.heap $*

# Use a default location if it is not set.
if ! [ $REGIMENTD ]; then 
    if [ -d $HOME/regiment_alpha ];
    then REGIMENTD=$HOME/regiment_alpha/; 
    elif [ -d $HOME/macroprogramming/regiment_alpha ];
    then REGIMENTD=$HOME/macroprogramming/regiment_alpha/; 

    elif [ -d /usr/regiment/ ];
    then REGIMENTD=/usr/regiment/; 
    elif [ -d /usr/local/regiment/ ];
    then REGIMENTD=/usr/local/regiment/; 
    fi;
fi

#echo CURRENTDIR "$REGIMENTD"
#MT=`echo '(display (machine-type))' | $REGIMENTD/depends/petite -q`

MT=`$REGIMENTD/depends/get_machine_type`

ARGS=${1+"$@"}

#echo RUNNING ON MACHINE TYPE: "<"$MT">"

setupchez() {
    if (which chez > /dev/null); 
	then SCHEME=chez;
    elif (which petite > /dev/null); 
	then SCHEME=petite
    elif [ -f $REGIMENTD/depends/petite ]; 
	then SCHEME="$REGIMENTD/depends/petite"
    else echo CHEZ SCHEME not found.; exit -1 
    fi 
}

script() {
#    exec "$REGIMENTD/src/regiment_script.ss" $*

    INVOKEDIR=`pwd`
    SCRIPT="$REGIMENTD/src/regiment_script.ss"
    ENTRY="$REGIMENTD/src/regiment.ss"
    setupchez;
    #echo ARGS: "<"$ARGS">"
    #(cd "$REGIMENTD/src"; exec $SCHEME --script "regiment.ss" "$INVOKEDIR" $ARGS)
    exec $SCHEME $1 --script "$ENTRY" "$INVOKEDIR" $ARGS
}

# First we handle the "ws.opt" cases:
if [ "$REGOPTLVL" == "3" ];
then (if [ -f $REGIMENTD/src/build/$MT/regiment.0.OPT.heap ];
      # If we can we use the stored heap, 
      then exec $REGIMENTD/depends/rawscheme -h $REGIMENTD/src/build/$MT/regiment.0.OPT.heap $*;
      # Otherwise check for .boot
      elif [ -f "$REGIMENTD/build/$MT/main_chez_OPT.boot" ]
      then setupchez;
           script "-b $REGIMENTD/src/build/$MT/main_chez_OPT.boot ";
      # Otherwise fall thruogh to running it as script.
      else script;
      fi);

# Not currently using heaps for debug mode:
elif [ "$REGDEBUGMODE" == "ON" ];
then script;

# [2007.04.15] In progress: going to move over to using boot files.
# Which means invoking with the boot file explicitly here, rather than
# letting the scheme source pick out the .so file.
elif [ -f "$REGIMENTD/build/$MT/main_chez.boot" ]
then setupchez;
     #exec $SCHEME -b $REGIMENTD/src/build/$MT/main_chez.boot $*;
     script "-b $REGIMENTD/src/build/$MT/main_chez.boot ";

elif [ -f "$REGIMENTD/src/build/$MT/regiment.0.heap" ];
then #echo Running regiment from saved heap...;
    exec $REGIMENTD/depends/rawscheme -h $REGIMENTD/src/build/$MT/regiment.0.heap $*;
else 
     script;
fi
