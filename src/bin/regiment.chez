#! /bin/bash

# This version of the script invokes Regiment using full Chez Scheme.
# It will try to load from, heap, boot file, or .so file in that
# order.  Failing those it will load from source.  If full Chez isn't
# available, it falls back to Petite.

source `dirname $0`/assert_regimentd
MT=`$REGIMENTD/depends/get_machine_type`

## R6RS VERSION:
############################################################

## FIXME: This branch assumes that thecommand "chez" is in the path.

## What's a good way to check if we're in R6RS mode?
CHEZVER=`chez --version &> /dev/stdout`
N=`echo $CHEZVER | sed 's/\\.//g'`
ARGS=$*

function from_source() {
  if cd $REGIMENTD/src; then
    echo "WARNING: Loading under chez from (potentally mixed) source/object files."
    exec chez --program $REGIMENTD/src/regiment.ss $CURDIR $ARGS
  fi # end if cd /src
}

function go() {
    FILE=$1
    if [ -e $FILE ];
    then exec chez --program $FILE $CURDIR $ARGS
    else from_source
    fi
}

if (( "$N" > 75 )); then 
  # RUN New R6RS mode:
  CURDIR=`pwd`
  if   [ "$REGOPTLVL" == "3" ];    then go "$REGIMENTD/build/$MT/regiment.opt.boot"
  elif [ "$REGDEBUGMODE" == "" ];  then go "$REGIMENTD/build/$MT/regiment.complete.boot"
  else                                  go "$REGIMENTD/build/$MT/regiment.debug.boot"
  fi
fi # end if version > 75



## PRE R6RS HACK:
############################################################

echo "USING OLD METHOD"

ARGS=${1+"$@"}

setupchez() {

    if   (which chez74 > /dev/null); 
	then SCHEME=chez74;
    elif (which chez > /dev/null); 
	then SCHEME=chez;
    elif (which petite > /dev/null); 
	then SCHEME=petite
    elif [ -f $REGIMENTD/depends/petite ]; 
	then SCHEME="$REGIMENTD/depends/petite"
    else echo CHEZ SCHEME not found.; exit -1 
    fi 
}

script() {
    INVOKEDIR=`pwd`
    ENTRY="$REGIMENTD/src/regiment_chez.ss"
    setupchez;
    echo Executing: exec $SCHEME $1 --script "$ENTRY" "$INVOKEDIR" $ARGS
    exec $SCHEME $1 --script "$ENTRY" "$INVOKEDIR" $ARGS
}

# First we handle the "ws.opt" cases:
if [ "$REGOPTLVL" == "3" ];
then (if [ -f $REGIMENTD/src/build/$MT/regiment.0.OPT.heap ];
      # If we can we use the stored heap, 
      then exec $REGIMENTD/depends/rawscheme -h $REGIMENTD/src/build/$MT/regiment.0.OPT.heap $*;
      # Otherwise check for .boot
      elif [ -f "$REGIMENTD/build/$MT/legacy_main_chez_OPT.boot" ]
      then setupchez;
           script "-b $REGIMENTD/src/build/$MT/legacy_main_chez_OPT.boot ";
      # Otherwise fall thruogh to running it as script.
      else script;
      fi);

# Not currently using heaps for debug mode:
elif [ "$REGDEBUGMODE" == "ON" ];
then script;

# [2007.04.15] In progress: going to move over to using boot files.
# Which means invoking with the boot file explicitly here, rather than
# letting the scheme source pick out the .so file.
elif [ -f "$REGIMENTD/build/$MT/legacy_main_chez.boot" ]
then setupchez;
     #exec $SCHEME -b $REGIMENTD/src/build/$MT/main_chez.boot $*;
     script "-b $REGIMENTD/src/build/$MT/legacy_main_chez.boot ";

elif [ -f "$REGIMENTD/src/build/$MT/regiment.0.heap" ];
then #echo Running regiment from saved heap...;
    exec $REGIMENTD/depends/rawscheme -h $REGIMENTD/src/build/$MT/regiment.0.heap $*;
else 
     script;
fi
